[{"C:\\dekstop\\covid-tracker\\src\\index.js":"1","C:\\dekstop\\covid-tracker\\src\\App.js":"2","C:\\dekstop\\covid-tracker\\src\\components\\index.js":"3","C:\\dekstop\\covid-tracker\\src\\api\\index.js":"4","C:\\dekstop\\covid-tracker\\src\\components\\Cards\\Cards.jsx":"5","C:\\dekstop\\covid-tracker\\src\\components\\CountryPicker\\CountryPicker.jsx":"6","C:\\dekstop\\covid-tracker\\src\\components\\Chart\\Chart.jsx":"7"},{"size":145,"mtime":1607077609740,"results":"8","hashOfConfig":"9"},{"size":1012,"mtime":1607458706089,"results":"10","hashOfConfig":"9"},{"size":169,"mtime":1607078359409,"results":"11","hashOfConfig":"9"},{"size":996,"mtime":1607092772195,"results":"12","hashOfConfig":"9"},{"size":2392,"mtime":1610225075494,"results":"13","hashOfConfig":"9"},{"size":872,"mtime":1607094334494,"results":"14","hashOfConfig":"9"},{"size":1737,"mtime":1607093667501,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"hhb9bp",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\dekstop\\covid-tracker\\src\\index.js",[],["33","34"],"C:\\dekstop\\covid-tracker\\src\\App.js",[],"C:\\dekstop\\covid-tracker\\src\\components\\index.js",[],"C:\\dekstop\\covid-tracker\\src\\api\\index.js",[],"C:\\dekstop\\covid-tracker\\src\\components\\Cards\\Cards.jsx",[],"C:\\dekstop\\covid-tracker\\src\\components\\CountryPicker\\CountryPicker.jsx",[],["35","36"],"C:\\dekstop\\covid-tracker\\src\\components\\Chart\\Chart.jsx",["37"],"import React, {useState, useEffect} from 'react'\r\nimport { fetchDailyData } from '../../api'\r\nimport {Line ,Bar } from 'react-chartjs-2'\r\n\r\nimport styles from './Chart.module.css'\r\nconst Chart = ({data: {confirmed, recovered, deaths } ,  country}) => {\r\n  const [dailyData, setDailyData] = useState([])\r\n  useEffect(() => \r\n  {\r\n    const fetchAPI = async () => {\r\n      setDailyData (await fetchDailyData())\r\n\r\n    }\r\n\r\n    fetchAPI()\r\n  },[])\r\n  \r\n  const barChart = (\r\n    confirmed\r\n    ?(\r\n      <Bar \r\n        data={{\r\n          labels:['Infected', 'Recovered', 'Deaths'],\r\n          datasets:[{\r\n            label:'People',\r\n            backgroundColor:['rgba(0, 0, 255, 0.5)',\r\n              'rgba(0, 255, 0, 0.5)',\r\n              'rgba(255, 0, 0, 0.5)'],\r\n            data:[confirmed.value,recovered.value,deaths.value]\r\n          }]\r\n        }}\r\n        options ={{\r\n          legend : {display:false},\r\n          title:{display:true, text:`Current state in ${country}`}\r\n        }}\r\n      />\r\n    ) :null\r\n  )\r\n\r\n  const lineChart = (\r\n    dailyData.length\r\n    ?(<Line \r\n      data = {{\r\n        labels :dailyData.map(({ date}) =>date),\r\n        datasets:[{\r\n          data:dailyData.map(({ confirmed}) =>confirmed),\r\n          label:'Infected',\r\n          borderColor:'#3333FF',\r\n          fill:true,\r\n\r\n        }, {\r\n          data:dailyData.map(({ deaths}) =>deaths),\r\n          label:'Deaths',\r\n          borderColor:'red',\r\n          fill:true,\r\n          backgroundColor:'rgba(255,0,0,0.5)',\r\n\r\n\r\n        }],\r\n      }}\r\n    \r\n    />):null\r\n  )\r\n\r\n  return (\r\n    <div className={styles.container}> \r\n      {country ? barChart:lineChart}\r\n    </div>\r\n  )\r\n  return (\r\n    <h1> Chart </h1>\r\n  )\r\n}\r\n\r\nexport default Chart",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":70,"column":3,"nodeType":"46","messageId":"47","endLine":72,"endColumn":4},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],["48"],["49"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-global-assign","no-unsafe-negation"]